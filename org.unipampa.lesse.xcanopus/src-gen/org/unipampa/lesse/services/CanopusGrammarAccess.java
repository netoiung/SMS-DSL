/*
 * generated by Xtext 2.14.0
 */
package org.unipampa.lesse.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CanopusGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIncludesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIncludesIncludeParserRuleCall_0_0 = (RuleCall)cIncludesAssignment_0.eContents().get(0);
		private final Assignment cMonitoringsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMonitoringsMonitoringParserRuleCall_1_0 = (RuleCall)cMonitoringsAssignment_1.eContents().get(0);
		private final Assignment cSutsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSutsSUTParserRuleCall_2_0 = (RuleCall)cSutsAssignment_2.eContents().get(0);
		private final Assignment cLoadGeneratorsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLoadGeneratorsLoadGeneratorParserRuleCall_3_0 = (RuleCall)cLoadGeneratorsAssignment_3.eContents().get(0);
		
		//Model:
		//	includes+=Include*
		//	monitorings+=Monitoring*
		//	suts+=SUT*
		//	loadGenerators+=LoadGenerator*;
		@Override public ParserRule getRule() { return rule; }
		
		//includes+=Include* monitorings+=Monitoring* suts+=SUT* loadGenerators+=LoadGenerator*
		public Group getGroup() { return cGroup; }
		
		//includes+=Include*
		public Assignment getIncludesAssignment_0() { return cIncludesAssignment_0; }
		
		//Include
		public RuleCall getIncludesIncludeParserRuleCall_0_0() { return cIncludesIncludeParserRuleCall_0_0; }
		
		//monitorings+=Monitoring*
		public Assignment getMonitoringsAssignment_1() { return cMonitoringsAssignment_1; }
		
		//Monitoring
		public RuleCall getMonitoringsMonitoringParserRuleCall_1_0() { return cMonitoringsMonitoringParserRuleCall_1_0; }
		
		//suts+=SUT*
		public Assignment getSutsAssignment_2() { return cSutsAssignment_2; }
		
		//SUT
		public RuleCall getSutsSUTParserRuleCall_2_0() { return cSutsSUTParserRuleCall_2_0; }
		
		//loadGenerators+=LoadGenerator*
		public Assignment getLoadGeneratorsAssignment_3() { return cLoadGeneratorsAssignment_3; }
		
		//LoadGenerator
		public RuleCall getLoadGeneratorsLoadGeneratorParserRuleCall_3_0() { return cLoadGeneratorsLoadGeneratorParserRuleCall_3_0; }
	}
	public class IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIncludeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Include:
		//	'include' importURI=STRING 'as' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'include' importURI=STRING 'as' name=ID
		public Group getGroup() { return cGroup; }
		
		//'include'
		public Keyword getIncludeKeyword_0() { return cIncludeKeyword_0; }
		
		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }
		
		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
		
		//'as'
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}
	public class MonitoringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Monitoring");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonitoringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProjectLabelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cProjectLabelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cProjectLabelEStringParserRuleCall_4_0 = (RuleCall)cProjectLabelAssignment_4.eContents().get(0);
		private final Keyword cProjectAuthorKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cProjectAuthorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cProjectAuthorEStringParserRuleCall_6_0 = (RuleCall)cProjectAuthorAssignment_6.eContents().get(0);
		private final Keyword cDescriptionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDescriptionEStringParserRuleCall_8_0 = (RuleCall)cDescriptionAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cSutKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cSKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cSutsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cSutsSUTCrossReference_10_0 = (CrossReference)cSutsAssignment_10.eContents().get(0);
		private final RuleCall cSutsSUTIDTerminalRuleCall_10_0_1 = (RuleCall)cSutsSUTCrossReference_10_0.eContents().get(1);
		private final Keyword cLoadGeneratorsKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cLoadGeneratorsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cLoadGeneratorsLoadGeneratorCrossReference_12_0 = (CrossReference)cLoadGeneratorsAssignment_12.eContents().get(0);
		private final RuleCall cLoadGeneratorsLoadGeneratorIDTerminalRuleCall_12_0_1 = (RuleCall)cLoadGeneratorsLoadGeneratorCrossReference_12_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Monitoring:
		//	'Monitoring'
		//	name=ID
		//	'{'
		//	'projectLabel' projectLabel=EString
		//	'projectAuthor' projectAuthor=EString
		//	'description' description=EString ('sut' 's'*) suts+=[SUT]+
		//	'loadGenerators' loadGenerators+=[LoadGenerator]+
		//	//	('monitors' monitors+=[Monitor])+
		//	//	('metrics' metrics+=[MetricModel])+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Monitoring' name=ID '{' 'projectLabel' projectLabel=EString 'projectAuthor' projectAuthor=EString 'description'
		//description=EString ('sut' 's'*) suts+=[SUT]+ 'loadGenerators' loadGenerators+=[LoadGenerator]+ //	('monitors' monitors+=[Monitor])+
		////	('metrics' metrics+=[MetricModel])+
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Monitoring'
		public Keyword getMonitoringKeyword_0() { return cMonitoringKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'projectLabel'
		public Keyword getProjectLabelKeyword_3() { return cProjectLabelKeyword_3; }
		
		//projectLabel=EString
		public Assignment getProjectLabelAssignment_4() { return cProjectLabelAssignment_4; }
		
		//EString
		public RuleCall getProjectLabelEStringParserRuleCall_4_0() { return cProjectLabelEStringParserRuleCall_4_0; }
		
		//'projectAuthor'
		public Keyword getProjectAuthorKeyword_5() { return cProjectAuthorKeyword_5; }
		
		//projectAuthor=EString
		public Assignment getProjectAuthorAssignment_6() { return cProjectAuthorAssignment_6; }
		
		//EString
		public RuleCall getProjectAuthorEStringParserRuleCall_6_0() { return cProjectAuthorEStringParserRuleCall_6_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_7() { return cDescriptionKeyword_7; }
		
		//description=EString
		public Assignment getDescriptionAssignment_8() { return cDescriptionAssignment_8; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_8_0() { return cDescriptionEStringParserRuleCall_8_0; }
		
		//'sut' 's'*
		public Group getGroup_9() { return cGroup_9; }
		
		//'sut'
		public Keyword getSutKeyword_9_0() { return cSutKeyword_9_0; }
		
		//'s'*
		public Keyword getSKeyword_9_1() { return cSKeyword_9_1; }
		
		//suts+=[SUT]+
		public Assignment getSutsAssignment_10() { return cSutsAssignment_10; }
		
		//[SUT]
		public CrossReference getSutsSUTCrossReference_10_0() { return cSutsSUTCrossReference_10_0; }
		
		//ID
		public RuleCall getSutsSUTIDTerminalRuleCall_10_0_1() { return cSutsSUTIDTerminalRuleCall_10_0_1; }
		
		//'loadGenerators'
		public Keyword getLoadGeneratorsKeyword_11() { return cLoadGeneratorsKeyword_11; }
		
		//loadGenerators+=[LoadGenerator]+
		public Assignment getLoadGeneratorsAssignment_12() { return cLoadGeneratorsAssignment_12; }
		
		//[LoadGenerator]
		public CrossReference getLoadGeneratorsLoadGeneratorCrossReference_12_0() { return cLoadGeneratorsLoadGeneratorCrossReference_12_0; }
		
		//ID
		public RuleCall getLoadGeneratorsLoadGeneratorIDTerminalRuleCall_12_0_1() { return cLoadGeneratorsLoadGeneratorIDTerminalRuleCall_12_0_1; }
		
		////	('monitors' monitors+=[Monitor])+
		////	('metrics' metrics+=[MetricModel])+
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class MetricElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Metric");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMemoryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDiskParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTransactionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Metric:
		//	Memory | Disk | Transaction;
		@Override public ParserRule getRule() { return rule; }
		
		//Memory | Disk | Transaction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Memory
		public RuleCall getMemoryParserRuleCall_0() { return cMemoryParserRuleCall_0; }
		
		//Disk
		public RuleCall getDiskParserRuleCall_1() { return cDiskParserRuleCall_1; }
		
		//Transaction
		public RuleCall getTransactionParserRuleCall_2() { return cTransactionParserRuleCall_2; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class SUTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.SUT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSUTAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSUTKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cHostnameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cHostnameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cHostnameEStringParserRuleCall_5_0 = (RuleCall)cHostnameAssignment_5.eContents().get(0);
		private final Keyword cIpKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cIpAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIpEStringParserRuleCall_7_0 = (RuleCall)cIpAssignment_7.eContents().get(0);
		private final Keyword cHardwareKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cHardwareAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cHardwareHardwareEnumRuleCall_9_0 = (RuleCall)cHardwareAssignment_9.eContents().get(0);
		private final Keyword cTypeKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTypeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cTypeSUTTypeEnumRuleCall_11_0 = (RuleCall)cTypeAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//SUT:
		//	{SUT}
		//	'SUT'
		//	name=ID
		//	'{'
		//	'hostname' hostname=EString?
		//	'ip' ip=EString?
		//	'hardware' hardware=Hardware?
		//	'type' type=SUTType?
		//	//	('sut' sut=[SUT|EString])?
		//	//	'metricmodel' metricmodel=[MetricModel|ID]?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SUT} 'SUT' name=ID '{' 'hostname' hostname=EString? 'ip' ip=EString? 'hardware' hardware=Hardware? 'type' type=SUTType? //	('sut' sut=[SUT|EString])?
		////	'metricmodel' metricmodel=[MetricModel|ID]?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SUT}
		public Action getSUTAction_0() { return cSUTAction_0; }
		
		//'SUT'
		public Keyword getSUTKeyword_1() { return cSUTKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'hostname'
		public Keyword getHostnameKeyword_4() { return cHostnameKeyword_4; }
		
		//hostname=EString?
		public Assignment getHostnameAssignment_5() { return cHostnameAssignment_5; }
		
		//EString
		public RuleCall getHostnameEStringParserRuleCall_5_0() { return cHostnameEStringParserRuleCall_5_0; }
		
		//'ip'
		public Keyword getIpKeyword_6() { return cIpKeyword_6; }
		
		//ip=EString?
		public Assignment getIpAssignment_7() { return cIpAssignment_7; }
		
		//EString
		public RuleCall getIpEStringParserRuleCall_7_0() { return cIpEStringParserRuleCall_7_0; }
		
		//'hardware'
		public Keyword getHardwareKeyword_8() { return cHardwareKeyword_8; }
		
		//hardware=Hardware?
		public Assignment getHardwareAssignment_9() { return cHardwareAssignment_9; }
		
		//Hardware
		public RuleCall getHardwareHardwareEnumRuleCall_9_0() { return cHardwareHardwareEnumRuleCall_9_0; }
		
		//'type'
		public Keyword getTypeKeyword_10() { return cTypeKeyword_10; }
		
		//type=SUTType?
		public Assignment getTypeAssignment_11() { return cTypeAssignment_11; }
		
		//SUTType
		public RuleCall getTypeSUTTypeEnumRuleCall_11_0() { return cTypeSUTTypeEnumRuleCall_11_0; }
		
		////	('sut' sut=[SUT|EString])?
		////	'metricmodel' metricmodel=[MetricModel|ID]?
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class LoadGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.LoadGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoadGeneratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cHostnameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHostnameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHostnameEStringParserRuleCall_4_0 = (RuleCall)cHostnameAssignment_4.eContents().get(0);
		private final Keyword cIpKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIpAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIpEStringParserRuleCall_6_0 = (RuleCall)cIpAssignment_6.eContents().get(0);
		private final Keyword cHardwareKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cHardwareAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cHardwareHardwareEnumRuleCall_8_0 = (RuleCall)cHardwareAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//LoadGenerator:
		//	'LoadGenerator'
		//	name=ID
		//	'{'
		//	'hostname' hostname=EString
		//	'ip' ip=EString
		//	'hardware' hardware=Hardware
		//	//'sut' sut=[SUT|EString]?
		//	//('metricmodel' metricmodel=[MetricModel|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'LoadGenerator' name=ID '{' 'hostname' hostname=EString 'ip' ip=EString 'hardware' hardware=Hardware //'sut' sut=[SUT|EString]?
		////('metricmodel' metricmodel=[MetricModel|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'LoadGenerator'
		public Keyword getLoadGeneratorKeyword_0() { return cLoadGeneratorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'hostname'
		public Keyword getHostnameKeyword_3() { return cHostnameKeyword_3; }
		
		//hostname=EString
		public Assignment getHostnameAssignment_4() { return cHostnameAssignment_4; }
		
		//EString
		public RuleCall getHostnameEStringParserRuleCall_4_0() { return cHostnameEStringParserRuleCall_4_0; }
		
		//'ip'
		public Keyword getIpKeyword_5() { return cIpKeyword_5; }
		
		//ip=EString
		public Assignment getIpAssignment_6() { return cIpAssignment_6; }
		
		//EString
		public RuleCall getIpEStringParserRuleCall_6_0() { return cIpEStringParserRuleCall_6_0; }
		
		//'hardware'
		public Keyword getHardwareKeyword_7() { return cHardwareKeyword_7; }
		
		//hardware=Hardware
		public Assignment getHardwareAssignment_8() { return cHardwareAssignment_8; }
		
		//Hardware
		public RuleCall getHardwareHardwareEnumRuleCall_8_0() { return cHardwareHardwareEnumRuleCall_8_0; }
		
		////'sut' sut=[SUT|EString]?
		////('metricmodel' metricmodel=[MetricModel|EString])?
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class MonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Monitor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMonitorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMonitorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHostnameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cHostnameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cHostnameEStringParserRuleCall_3_1_0 = (RuleCall)cHostnameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIpKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIpAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIpEStringParserRuleCall_4_1_0 = (RuleCall)cIpAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHardwareKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cHardwareAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cHardwareHardwareEnumRuleCall_5_1_0 = (RuleCall)cHardwareAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSutKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSutAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSutSUTCrossReference_6_1_0 = (CrossReference)cSutAssignment_6_1.eContents().get(0);
		private final RuleCall cSutSUTIDTerminalRuleCall_6_1_0_1 = (RuleCall)cSutSUTCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Monitor:
		//	{Monitor}
		//	'Monitor'
		//	'{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=Hardware)? ('sut' sut=[SUT])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Monitor} 'Monitor' '{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=Hardware)? ('sut'
		//sut=[SUT])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Monitor}
		public Action getMonitorAction_0() { return cMonitorAction_0; }
		
		//'Monitor'
		public Keyword getMonitorKeyword_1() { return cMonitorKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('hostname' hostname=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'hostname'
		public Keyword getHostnameKeyword_3_0() { return cHostnameKeyword_3_0; }
		
		//hostname=EString
		public Assignment getHostnameAssignment_3_1() { return cHostnameAssignment_3_1; }
		
		//EString
		public RuleCall getHostnameEStringParserRuleCall_3_1_0() { return cHostnameEStringParserRuleCall_3_1_0; }
		
		//('ip' ip=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'ip'
		public Keyword getIpKeyword_4_0() { return cIpKeyword_4_0; }
		
		//ip=EString
		public Assignment getIpAssignment_4_1() { return cIpAssignment_4_1; }
		
		//EString
		public RuleCall getIpEStringParserRuleCall_4_1_0() { return cIpEStringParserRuleCall_4_1_0; }
		
		//('hardware' hardware=Hardware)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'hardware'
		public Keyword getHardwareKeyword_5_0() { return cHardwareKeyword_5_0; }
		
		//hardware=Hardware
		public Assignment getHardwareAssignment_5_1() { return cHardwareAssignment_5_1; }
		
		//Hardware
		public RuleCall getHardwareHardwareEnumRuleCall_5_1_0() { return cHardwareHardwareEnumRuleCall_5_1_0; }
		
		//('sut' sut=[SUT])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'sut'
		public Keyword getSutKeyword_6_0() { return cSutKeyword_6_0; }
		
		//sut=[SUT]
		public Assignment getSutAssignment_6_1() { return cSutAssignment_6_1; }
		
		//[SUT]
		public CrossReference getSutSUTCrossReference_6_1_0() { return cSutSUTCrossReference_6_1_0; }
		
		//ID
		public RuleCall getSutSUTIDTerminalRuleCall_6_1_0_1() { return cSutSUTIDTerminalRuleCall_6_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MetricModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.MetricModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetricModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMetricmodelKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cMetricmodelAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cMetricmodelMetricCollectionParserRuleCall_3_2_0 = (RuleCall)cMetricmodelAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cMetricmodelAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cMetricmodelMetricCollectionParserRuleCall_3_3_1_0 = (RuleCall)cMetricmodelAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MetricModel:
		//	'MetricModel'
		//	name=ID
		//	'{' ('metricmodel' '{' metricmodel+=MetricCollection ("," metricmodel+=MetricCollection)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MetricModel' name=ID '{' ('metricmodel' '{' metricmodel+=MetricCollection ("," metricmodel+=MetricCollection)* '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MetricModel'
		public Keyword getMetricModelKeyword_0() { return cMetricModelKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('metricmodel' '{' metricmodel+=MetricCollection ("," metricmodel+=MetricCollection)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'metricmodel'
		public Keyword getMetricmodelKeyword_3_0() { return cMetricmodelKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//metricmodel+=MetricCollection
		public Assignment getMetricmodelAssignment_3_2() { return cMetricmodelAssignment_3_2; }
		
		//MetricCollection
		public RuleCall getMetricmodelMetricCollectionParserRuleCall_3_2_0() { return cMetricmodelMetricCollectionParserRuleCall_3_2_0; }
		
		//("," metricmodel+=MetricCollection)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//metricmodel+=MetricCollection
		public Assignment getMetricmodelAssignment_3_3_1() { return cMetricmodelAssignment_3_3_1; }
		
		//MetricCollection
		public RuleCall getMetricmodelMetricCollectionParserRuleCall_3_3_1_0() { return cMetricmodelMetricCollectionParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class MetricCollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.MetricCollection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetricCollectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cMetricKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMetricAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMetricMetricParserRuleCall_4_0 = (RuleCall)cMetricAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMetricAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMetricMetricParserRuleCall_5_1_0 = (RuleCall)cMetricAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MetricCollection:
		//	'MetricCollection'
		//	'{'
		//	'metric' '{' metric+=Metric ("," metric+=Metric)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MetricCollection' '{' 'metric' '{' metric+=Metric ("," metric+=Metric)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'MetricCollection'
		public Keyword getMetricCollectionKeyword_0() { return cMetricCollectionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'metric'
		public Keyword getMetricKeyword_2() { return cMetricKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//metric+=Metric
		public Assignment getMetricAssignment_4() { return cMetricAssignment_4; }
		
		//Metric
		public RuleCall getMetricMetricParserRuleCall_4_0() { return cMetricMetricParserRuleCall_4_0; }
		
		//("," metric+=Metric)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//metric+=Metric
		public Assignment getMetricAssignment_5_1() { return cMetricAssignment_5_1; }
		
		//Metric
		public RuleCall getMetricMetricParserRuleCall_5_1_0() { return cMetricMetricParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ThresholdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Threshold");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cThresholdAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cThresholdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEIntParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Threshold:
		//	{Threshold} 'Threshold'
		//	'{' ('value' value=EInt)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Threshold} 'Threshold' '{' ('value' value=EInt)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Threshold}
		public Action getThresholdAction_0() { return cThresholdAction_0; }
		
		//'Threshold'
		public Keyword getThresholdKeyword_1() { return cThresholdKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EInt
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_3_1_0() { return cValueEIntParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MemoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Memory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMemoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cThresholdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cThresholdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cThresholdThresholdCrossReference_3_1_0 = (CrossReference)cThresholdAssignment_3_1.eContents().get(0);
		private final RuleCall cThresholdThresholdEStringParserRuleCall_3_1_0_1 = (RuleCall)cThresholdThresholdCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Memory:
		//	'Memory'
		//	name=EString
		//	'{' ('threshold' threshold=[Threshold|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Memory' name=EString '{' ('threshold' threshold=[Threshold|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//'Memory'
		public Keyword getMemoryKeyword_0() { return cMemoryKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('threshold' threshold=[Threshold|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'threshold'
		public Keyword getThresholdKeyword_3_0() { return cThresholdKeyword_3_0; }
		
		//threshold=[Threshold|EString]
		public Assignment getThresholdAssignment_3_1() { return cThresholdAssignment_3_1; }
		
		//[Threshold|EString]
		public CrossReference getThresholdThresholdCrossReference_3_1_0() { return cThresholdThresholdCrossReference_3_1_0; }
		
		//EString
		public RuleCall getThresholdThresholdEStringParserRuleCall_3_1_0_1() { return cThresholdThresholdEStringParserRuleCall_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DiskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Disk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cThresholdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cThresholdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cThresholdThresholdCrossReference_3_1_0 = (CrossReference)cThresholdAssignment_3_1.eContents().get(0);
		private final RuleCall cThresholdThresholdEStringParserRuleCall_3_1_0_1 = (RuleCall)cThresholdThresholdCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDisk_io_counterKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDisk_io_counterAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDisk_io_counterDisk_IO_CounterCrossReference_4_1_0 = (CrossReference)cDisk_io_counterAssignment_4_1.eContents().get(0);
		private final RuleCall cDisk_io_counterDisk_IO_CounterEStringParserRuleCall_4_1_0_1 = (RuleCall)cDisk_io_counterDisk_IO_CounterCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Disk:
		//	'Disk'
		//	name=EString
		//	'{' ('threshold' threshold=[Threshold|EString])? ('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Disk' name=EString '{' ('threshold' threshold=[Threshold|EString])? ('disk_io_counter'
		//disk_io_counter=[Disk_IO_Counter|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//'Disk'
		public Keyword getDiskKeyword_0() { return cDiskKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('threshold' threshold=[Threshold|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'threshold'
		public Keyword getThresholdKeyword_3_0() { return cThresholdKeyword_3_0; }
		
		//threshold=[Threshold|EString]
		public Assignment getThresholdAssignment_3_1() { return cThresholdAssignment_3_1; }
		
		//[Threshold|EString]
		public CrossReference getThresholdThresholdCrossReference_3_1_0() { return cThresholdThresholdCrossReference_3_1_0; }
		
		//EString
		public RuleCall getThresholdThresholdEStringParserRuleCall_3_1_0_1() { return cThresholdThresholdEStringParserRuleCall_3_1_0_1; }
		
		//('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'disk_io_counter'
		public Keyword getDisk_io_counterKeyword_4_0() { return cDisk_io_counterKeyword_4_0; }
		
		//disk_io_counter=[Disk_IO_Counter|EString]
		public Assignment getDisk_io_counterAssignment_4_1() { return cDisk_io_counterAssignment_4_1; }
		
		//[Disk_IO_Counter|EString]
		public CrossReference getDisk_io_counterDisk_IO_CounterCrossReference_4_1_0() { return cDisk_io_counterDisk_IO_CounterCrossReference_4_1_0; }
		
		//EString
		public RuleCall getDisk_io_counterDisk_IO_CounterEStringParserRuleCall_4_1_0_1() { return cDisk_io_counterDisk_IO_CounterEStringParserRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TransactionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Transaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransactionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cThresholdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cThresholdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cThresholdThresholdCrossReference_3_1_0 = (CrossReference)cThresholdAssignment_3_1.eContents().get(0);
		private final RuleCall cThresholdThresholdEStringParserRuleCall_3_1_0_1 = (RuleCall)cThresholdThresholdCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Transaction:
		//	'Transaction'
		//	name=EString
		//	'{' ('threshold' threshold=[Threshold|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Transaction' name=EString '{' ('threshold' threshold=[Threshold|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//'Transaction'
		public Keyword getTransactionKeyword_0() { return cTransactionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('threshold' threshold=[Threshold|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'threshold'
		public Keyword getThresholdKeyword_3_0() { return cThresholdKeyword_3_0; }
		
		//threshold=[Threshold|EString]
		public Assignment getThresholdAssignment_3_1() { return cThresholdAssignment_3_1; }
		
		//[Threshold|EString]
		public CrossReference getThresholdThresholdCrossReference_3_1_0() { return cThresholdThresholdCrossReference_3_1_0; }
		
		//EString
		public RuleCall getThresholdThresholdEStringParserRuleCall_3_1_0_1() { return cThresholdThresholdEStringParserRuleCall_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class Disk_IO_CounterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Disk_IO_Counter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDisk_IO_CounterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCounterDiskKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cCounterDiskAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cCounterDiskCOUNTER_DISKEnumRuleCall_3_2_0 = (RuleCall)cCounterDiskAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCounterDiskAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cCounterDiskCOUNTER_DISKEnumRuleCall_3_3_1_0 = (RuleCall)cCounterDiskAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cThresholdKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cThresholdAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cThresholdThresholdCrossReference_4_1_0 = (CrossReference)cThresholdAssignment_4_1.eContents().get(0);
		private final RuleCall cThresholdThresholdEStringParserRuleCall_4_1_0_1 = (RuleCall)cThresholdThresholdCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCriteriaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCriteriaAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cCriteriaCriteriaCrossReference_5_1_0 = (CrossReference)cCriteriaAssignment_5_1.eContents().get(0);
		private final RuleCall cCriteriaCriteriaEStringParserRuleCall_5_1_0_1 = (RuleCall)cCriteriaCriteriaCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Disk_IO_Counter:
		//	'Disk_IO_Counter'
		//	name=EString
		//	'{' ('counterDisk' '{' counterDisk+=COUNTER_DISK ("," counterDisk+=COUNTER_DISK)* '}')? ('threshold'
		//	threshold=[Threshold|EString])? ('criteria' criteria=[Criteria|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Disk_IO_Counter' name=EString '{' ('counterDisk' '{' counterDisk+=COUNTER_DISK ("," counterDisk+=COUNTER_DISK)* '}')?
		//('threshold' threshold=[Threshold|EString])? ('criteria' criteria=[Criteria|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//'Disk_IO_Counter'
		public Keyword getDisk_IO_CounterKeyword_0() { return cDisk_IO_CounterKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('counterDisk' '{' counterDisk+=COUNTER_DISK ("," counterDisk+=COUNTER_DISK)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'counterDisk'
		public Keyword getCounterDiskKeyword_3_0() { return cCounterDiskKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//counterDisk+=COUNTER_DISK
		public Assignment getCounterDiskAssignment_3_2() { return cCounterDiskAssignment_3_2; }
		
		//COUNTER_DISK
		public RuleCall getCounterDiskCOUNTER_DISKEnumRuleCall_3_2_0() { return cCounterDiskCOUNTER_DISKEnumRuleCall_3_2_0; }
		
		//("," counterDisk+=COUNTER_DISK)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//counterDisk+=COUNTER_DISK
		public Assignment getCounterDiskAssignment_3_3_1() { return cCounterDiskAssignment_3_3_1; }
		
		//COUNTER_DISK
		public RuleCall getCounterDiskCOUNTER_DISKEnumRuleCall_3_3_1_0() { return cCounterDiskCOUNTER_DISKEnumRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('threshold' threshold=[Threshold|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'threshold'
		public Keyword getThresholdKeyword_4_0() { return cThresholdKeyword_4_0; }
		
		//threshold=[Threshold|EString]
		public Assignment getThresholdAssignment_4_1() { return cThresholdAssignment_4_1; }
		
		//[Threshold|EString]
		public CrossReference getThresholdThresholdCrossReference_4_1_0() { return cThresholdThresholdCrossReference_4_1_0; }
		
		//EString
		public RuleCall getThresholdThresholdEStringParserRuleCall_4_1_0_1() { return cThresholdThresholdEStringParserRuleCall_4_1_0_1; }
		
		//('criteria' criteria=[Criteria|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'criteria'
		public Keyword getCriteriaKeyword_5_0() { return cCriteriaKeyword_5_0; }
		
		//criteria=[Criteria|EString]
		public Assignment getCriteriaAssignment_5_1() { return cCriteriaAssignment_5_1; }
		
		//[Criteria|EString]
		public CrossReference getCriteriaCriteriaCrossReference_5_1_0() { return cCriteriaCriteriaCrossReference_5_1_0; }
		
		//EString
		public RuleCall getCriteriaCriteriaEStringParserRuleCall_5_1_0_1() { return cCriteriaCriteriaEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class CriteriaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Criteria");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCriteriaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCriteriaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEIntParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cThresholdKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cThresholdAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cThresholdThresholdCrossReference_4_1_0 = (CrossReference)cThresholdAssignment_4_1.eContents().get(0);
		private final RuleCall cThresholdThresholdEStringParserRuleCall_4_1_0_1 = (RuleCall)cThresholdThresholdCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Criteria:
		//	{Criteria} 'Criteria'
		//	'{' ('value' value=EInt)? ('threshold' threshold=[Threshold|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Criteria} 'Criteria' '{' ('value' value=EInt)? ('threshold' threshold=[Threshold|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Criteria}
		public Action getCriteriaAction_0() { return cCriteriaAction_0; }
		
		//'Criteria'
		public Keyword getCriteriaKeyword_1() { return cCriteriaKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EInt
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_3_1_0() { return cValueEIntParserRuleCall_3_1_0; }
		
		//('threshold' threshold=[Threshold|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'threshold'
		public Keyword getThresholdKeyword_4_0() { return cThresholdKeyword_4_0; }
		
		//threshold=[Threshold|EString]
		public Assignment getThresholdAssignment_4_1() { return cThresholdAssignment_4_1; }
		
		//[Threshold|EString]
		public CrossReference getThresholdThresholdCrossReference_4_1_0() { return cThresholdThresholdCrossReference_4_1_0; }
		
		//EString
		public RuleCall getThresholdThresholdEStringParserRuleCall_4_1_0_1() { return cThresholdThresholdEStringParserRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	public class HardwareElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.Hardware");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPHYSICA_MACHINEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPHYSICA_MACHINEPHYSICA_MACHINEKeyword_0_0 = (Keyword)cPHYSICA_MACHINEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVIRTUAL_MACHINEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVIRTUAL_MACHINEVIRTUAL_MACHINEKeyword_1_0 = (Keyword)cVIRTUAL_MACHINEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCLOUD_SERVICEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCLOUD_SERVICECLOUD_SERVICEKeyword_2_0 = (Keyword)cCLOUD_SERVICEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Hardware:
		//	PHYSICA_MACHINE | VIRTUAL_MACHINE | CLOUD_SERVICE;
		public EnumRule getRule() { return rule; }
		
		//PHYSICA_MACHINE | VIRTUAL_MACHINE | CLOUD_SERVICE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PHYSICA_MACHINE
		public EnumLiteralDeclaration getPHYSICA_MACHINEEnumLiteralDeclaration_0() { return cPHYSICA_MACHINEEnumLiteralDeclaration_0; }
		
		//'PHYSICA_MACHINE'
		public Keyword getPHYSICA_MACHINEPHYSICA_MACHINEKeyword_0_0() { return cPHYSICA_MACHINEPHYSICA_MACHINEKeyword_0_0; }
		
		//VIRTUAL_MACHINE
		public EnumLiteralDeclaration getVIRTUAL_MACHINEEnumLiteralDeclaration_1() { return cVIRTUAL_MACHINEEnumLiteralDeclaration_1; }
		
		//'VIRTUAL_MACHINE'
		public Keyword getVIRTUAL_MACHINEVIRTUAL_MACHINEKeyword_1_0() { return cVIRTUAL_MACHINEVIRTUAL_MACHINEKeyword_1_0; }
		
		//CLOUD_SERVICE
		public EnumLiteralDeclaration getCLOUD_SERVICEEnumLiteralDeclaration_2() { return cCLOUD_SERVICEEnumLiteralDeclaration_2; }
		
		//'CLOUD_SERVICE'
		public Keyword getCLOUD_SERVICECLOUD_SERVICEKeyword_2_0() { return cCLOUD_SERVICECLOUD_SERVICEKeyword_2_0; }
	}
	public class SUTTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.SUTType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDESKTOPAPPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDESKTOPAPPDESKTOPAPPKeyword_0_0 = (Keyword)cDESKTOPAPPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDATABASEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDATABASEDATABASEKeyword_1_0 = (Keyword)cDATABASEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWEBAPPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWEBAPPWEBAPPKeyword_2_0 = (Keyword)cWEBAPPEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWEBSERVICEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWEBSERVICEWEBSERVICEKeyword_3_0 = (Keyword)cWEBSERVICEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum SUTType:
		//	DESKTOPAPP | DATABASE | WEBAPP | WEBSERVICE;
		public EnumRule getRule() { return rule; }
		
		//DESKTOPAPP | DATABASE | WEBAPP | WEBSERVICE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DESKTOPAPP
		public EnumLiteralDeclaration getDESKTOPAPPEnumLiteralDeclaration_0() { return cDESKTOPAPPEnumLiteralDeclaration_0; }
		
		//'DESKTOPAPP'
		public Keyword getDESKTOPAPPDESKTOPAPPKeyword_0_0() { return cDESKTOPAPPDESKTOPAPPKeyword_0_0; }
		
		//DATABASE
		public EnumLiteralDeclaration getDATABASEEnumLiteralDeclaration_1() { return cDATABASEEnumLiteralDeclaration_1; }
		
		//'DATABASE'
		public Keyword getDATABASEDATABASEKeyword_1_0() { return cDATABASEDATABASEKeyword_1_0; }
		
		//WEBAPP
		public EnumLiteralDeclaration getWEBAPPEnumLiteralDeclaration_2() { return cWEBAPPEnumLiteralDeclaration_2; }
		
		//'WEBAPP'
		public Keyword getWEBAPPWEBAPPKeyword_2_0() { return cWEBAPPWEBAPPKeyword_2_0; }
		
		//WEBSERVICE
		public EnumLiteralDeclaration getWEBSERVICEEnumLiteralDeclaration_3() { return cWEBSERVICEEnumLiteralDeclaration_3; }
		
		//'WEBSERVICE'
		public Keyword getWEBSERVICEWEBSERVICEKeyword_3_0() { return cWEBSERVICEWEBSERVICEKeyword_3_0; }
	}
	public class COUNTER_DISKElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.COUNTER_DISK");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAVG_DISK_SECS_TRANSFER_COUNTERAVG_DISK_SECS_TRANSFER_COUNTERKeyword_0_0 = (Keyword)cAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration c_IDLE_TIME_COUNTEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword c_IDLE_TIME_COUNTER_IDLE_TIME_COUNTERKeyword_1_0 = (Keyword)c_IDLE_TIME_COUNTEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDISK_TRANSFERS_SEC_COUNTERDISK_TRANSFERS_SEC_COUNTERKeyword_2_0 = (Keyword)cDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAVG_DISK_QUEUE_LENGTH_COUNTERAVG_DISK_QUEUE_LENGTH_COUNTERKeyword_3_0 = (Keyword)cAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSPLIT_IO_SEC_COUNTERSPLIT_IO_SEC_COUNTERKeyword_4_0 = (Keyword)cSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFREE_MEGABYTES_COUNTERFREE_MEGABYTES_COUNTERKeyword_5_0 = (Keyword)cFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5.eContents().get(0);
		
		//enum COUNTER_DISK:
		//	AVG_DISK_SECS_TRANSFER_COUNTER | _IDLE_TIME_COUNTER | DISK_TRANSFERS_SEC_COUNTER | AVG_DISK_QUEUE_LENGTH_COUNTER |
		//	SPLIT_IO_SEC_COUNTER | FREE_MEGABYTES_COUNTER;
		public EnumRule getRule() { return rule; }
		
		//AVG_DISK_SECS_TRANSFER_COUNTER | _IDLE_TIME_COUNTER | DISK_TRANSFERS_SEC_COUNTER | AVG_DISK_QUEUE_LENGTH_COUNTER |
		//SPLIT_IO_SEC_COUNTER | FREE_MEGABYTES_COUNTER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AVG_DISK_SECS_TRANSFER_COUNTER
		public EnumLiteralDeclaration getAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0() { return cAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0; }
		
		//'AVG_DISK_SECS_TRANSFER_COUNTER'
		public Keyword getAVG_DISK_SECS_TRANSFER_COUNTERAVG_DISK_SECS_TRANSFER_COUNTERKeyword_0_0() { return cAVG_DISK_SECS_TRANSFER_COUNTERAVG_DISK_SECS_TRANSFER_COUNTERKeyword_0_0; }
		
		//_IDLE_TIME_COUNTER
		public EnumLiteralDeclaration get_IDLE_TIME_COUNTEREnumLiteralDeclaration_1() { return c_IDLE_TIME_COUNTEREnumLiteralDeclaration_1; }
		
		//'_IDLE_TIME_COUNTER'
		public Keyword get_IDLE_TIME_COUNTER_IDLE_TIME_COUNTERKeyword_1_0() { return c_IDLE_TIME_COUNTER_IDLE_TIME_COUNTERKeyword_1_0; }
		
		//DISK_TRANSFERS_SEC_COUNTER
		public EnumLiteralDeclaration getDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2() { return cDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2; }
		
		//'DISK_TRANSFERS_SEC_COUNTER'
		public Keyword getDISK_TRANSFERS_SEC_COUNTERDISK_TRANSFERS_SEC_COUNTERKeyword_2_0() { return cDISK_TRANSFERS_SEC_COUNTERDISK_TRANSFERS_SEC_COUNTERKeyword_2_0; }
		
		//AVG_DISK_QUEUE_LENGTH_COUNTER
		public EnumLiteralDeclaration getAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3() { return cAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3; }
		
		//'AVG_DISK_QUEUE_LENGTH_COUNTER'
		public Keyword getAVG_DISK_QUEUE_LENGTH_COUNTERAVG_DISK_QUEUE_LENGTH_COUNTERKeyword_3_0() { return cAVG_DISK_QUEUE_LENGTH_COUNTERAVG_DISK_QUEUE_LENGTH_COUNTERKeyword_3_0; }
		
		//SPLIT_IO_SEC_COUNTER
		public EnumLiteralDeclaration getSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4() { return cSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4; }
		
		//'SPLIT_IO_SEC_COUNTER'
		public Keyword getSPLIT_IO_SEC_COUNTERSPLIT_IO_SEC_COUNTERKeyword_4_0() { return cSPLIT_IO_SEC_COUNTERSPLIT_IO_SEC_COUNTERKeyword_4_0; }
		
		//FREE_MEGABYTES_COUNTER
		public EnumLiteralDeclaration getFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5() { return cFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5; }
		
		//'FREE_MEGABYTES_COUNTER'
		public Keyword getFREE_MEGABYTES_COUNTERFREE_MEGABYTES_COUNTERKeyword_5_0() { return cFREE_MEGABYTES_COUNTERFREE_MEGABYTES_COUNTERKeyword_5_0; }
	}
	
	private final ModelElements pModel;
	private final IncludeElements pInclude;
	private final MonitoringElements pMonitoring;
	private final MetricElements pMetric;
	private final EStringElements pEString;
	private final SUTElements pSUT;
	private final LoadGeneratorElements pLoadGenerator;
	private final MonitorElements pMonitor;
	private final MetricModelElements pMetricModel;
	private final HardwareElements eHardware;
	private final SUTTypeElements eSUTType;
	private final EBooleanElements pEBoolean;
	private final MetricCollectionElements pMetricCollection;
	private final ThresholdElements pThreshold;
	private final MemoryElements pMemory;
	private final DiskElements pDisk;
	private final TransactionElements pTransaction;
	private final EIntElements pEInt;
	private final Disk_IO_CounterElements pDisk_IO_Counter;
	private final CriteriaElements pCriteria;
	private final COUNTER_DISKElements eCOUNTER_DISK;
	private final TerminalRule tID;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public CanopusGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pModel = new ModelElements();
		this.pInclude = new IncludeElements();
		this.pMonitoring = new MonitoringElements();
		this.pMetric = new MetricElements();
		this.pEString = new EStringElements();
		this.pSUT = new SUTElements();
		this.pLoadGenerator = new LoadGeneratorElements();
		this.pMonitor = new MonitorElements();
		this.pMetricModel = new MetricModelElements();
		this.eHardware = new HardwareElements();
		this.eSUTType = new SUTTypeElements();
		this.pEBoolean = new EBooleanElements();
		this.pMetricCollection = new MetricCollectionElements();
		this.pThreshold = new ThresholdElements();
		this.pMemory = new MemoryElements();
		this.pDisk = new DiskElements();
		this.pTransaction = new TransactionElements();
		this.pEInt = new EIntElements();
		this.pDisk_IO_Counter = new Disk_IO_CounterElements();
		this.pCriteria = new CriteriaElements();
		this.eCOUNTER_DISK = new COUNTER_DISKElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.ID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.INT");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.Canopus.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.unipampa.lesse.Canopus".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//Model:
	//	includes+=Include*
	//	monitorings+=Monitoring*
	//	suts+=SUT*
	//	loadGenerators+=LoadGenerator*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Include:
	//	'include' importURI=STRING 'as' name=ID;
	public IncludeElements getIncludeAccess() {
		return pInclude;
	}
	
	public ParserRule getIncludeRule() {
		return getIncludeAccess().getRule();
	}
	
	//Monitoring:
	//	'Monitoring'
	//	name=ID
	//	'{'
	//	'projectLabel' projectLabel=EString
	//	'projectAuthor' projectAuthor=EString
	//	'description' description=EString ('sut' 's'*) suts+=[SUT]+
	//	'loadGenerators' loadGenerators+=[LoadGenerator]+
	//	//	('monitors' monitors+=[Monitor])+
	//	//	('metrics' metrics+=[MetricModel])+
	//	'}';
	public MonitoringElements getMonitoringAccess() {
		return pMonitoring;
	}
	
	public ParserRule getMonitoringRule() {
		return getMonitoringAccess().getRule();
	}
	
	//Metric:
	//	Memory | Disk | Transaction;
	public MetricElements getMetricAccess() {
		return pMetric;
	}
	
	public ParserRule getMetricRule() {
		return getMetricAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//SUT:
	//	{SUT}
	//	'SUT'
	//	name=ID
	//	'{'
	//	'hostname' hostname=EString?
	//	'ip' ip=EString?
	//	'hardware' hardware=Hardware?
	//	'type' type=SUTType?
	//	//	('sut' sut=[SUT|EString])?
	//	//	'metricmodel' metricmodel=[MetricModel|ID]?
	//	'}';
	public SUTElements getSUTAccess() {
		return pSUT;
	}
	
	public ParserRule getSUTRule() {
		return getSUTAccess().getRule();
	}
	
	//LoadGenerator:
	//	'LoadGenerator'
	//	name=ID
	//	'{'
	//	'hostname' hostname=EString
	//	'ip' ip=EString
	//	'hardware' hardware=Hardware
	//	//'sut' sut=[SUT|EString]?
	//	//('metricmodel' metricmodel=[MetricModel|EString])?
	//	'}';
	public LoadGeneratorElements getLoadGeneratorAccess() {
		return pLoadGenerator;
	}
	
	public ParserRule getLoadGeneratorRule() {
		return getLoadGeneratorAccess().getRule();
	}
	
	//Monitor:
	//	{Monitor}
	//	'Monitor'
	//	'{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=Hardware)? ('sut' sut=[SUT])?
	//	'}';
	public MonitorElements getMonitorAccess() {
		return pMonitor;
	}
	
	public ParserRule getMonitorRule() {
		return getMonitorAccess().getRule();
	}
	
	//MetricModel:
	//	'MetricModel'
	//	name=ID
	//	'{' ('metricmodel' '{' metricmodel+=MetricCollection ("," metricmodel+=MetricCollection)* '}')?
	//	'}';
	public MetricModelElements getMetricModelAccess() {
		return pMetricModel;
	}
	
	public ParserRule getMetricModelRule() {
		return getMetricModelAccess().getRule();
	}
	
	//enum Hardware:
	//	PHYSICA_MACHINE | VIRTUAL_MACHINE | CLOUD_SERVICE;
	public HardwareElements getHardwareAccess() {
		return eHardware;
	}
	
	public EnumRule getHardwareRule() {
		return getHardwareAccess().getRule();
	}
	
	//enum SUTType:
	//	DESKTOPAPP | DATABASE | WEBAPP | WEBSERVICE;
	public SUTTypeElements getSUTTypeAccess() {
		return eSUTType;
	}
	
	public EnumRule getSUTTypeRule() {
		return getSUTTypeAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//MetricCollection:
	//	'MetricCollection'
	//	'{'
	//	'metric' '{' metric+=Metric ("," metric+=Metric)* '}'
	//	'}';
	public MetricCollectionElements getMetricCollectionAccess() {
		return pMetricCollection;
	}
	
	public ParserRule getMetricCollectionRule() {
		return getMetricCollectionAccess().getRule();
	}
	
	//Threshold:
	//	{Threshold} 'Threshold'
	//	'{' ('value' value=EInt)?
	//	'}';
	public ThresholdElements getThresholdAccess() {
		return pThreshold;
	}
	
	public ParserRule getThresholdRule() {
		return getThresholdAccess().getRule();
	}
	
	//Memory:
	//	'Memory'
	//	name=EString
	//	'{' ('threshold' threshold=[Threshold|EString])?
	//	'}';
	public MemoryElements getMemoryAccess() {
		return pMemory;
	}
	
	public ParserRule getMemoryRule() {
		return getMemoryAccess().getRule();
	}
	
	//Disk:
	//	'Disk'
	//	name=EString
	//	'{' ('threshold' threshold=[Threshold|EString])? ('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])?
	//	'}';
	public DiskElements getDiskAccess() {
		return pDisk;
	}
	
	public ParserRule getDiskRule() {
		return getDiskAccess().getRule();
	}
	
	//Transaction:
	//	'Transaction'
	//	name=EString
	//	'{' ('threshold' threshold=[Threshold|EString])?
	//	'}';
	public TransactionElements getTransactionAccess() {
		return pTransaction;
	}
	
	public ParserRule getTransactionRule() {
		return getTransactionAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Disk_IO_Counter:
	//	'Disk_IO_Counter'
	//	name=EString
	//	'{' ('counterDisk' '{' counterDisk+=COUNTER_DISK ("," counterDisk+=COUNTER_DISK)* '}')? ('threshold'
	//	threshold=[Threshold|EString])? ('criteria' criteria=[Criteria|EString])?
	//	'}';
	public Disk_IO_CounterElements getDisk_IO_CounterAccess() {
		return pDisk_IO_Counter;
	}
	
	public ParserRule getDisk_IO_CounterRule() {
		return getDisk_IO_CounterAccess().getRule();
	}
	
	//Criteria:
	//	{Criteria} 'Criteria'
	//	'{' ('value' value=EInt)? ('threshold' threshold=[Threshold|EString])?
	//	'}';
	public CriteriaElements getCriteriaAccess() {
		return pCriteria;
	}
	
	public ParserRule getCriteriaRule() {
		return getCriteriaAccess().getRule();
	}
	
	//enum COUNTER_DISK:
	//	AVG_DISK_SECS_TRANSFER_COUNTER | _IDLE_TIME_COUNTER | DISK_TRANSFERS_SEC_COUNTER | AVG_DISK_QUEUE_LENGTH_COUNTER |
	//	SPLIT_IO_SEC_COUNTER | FREE_MEGABYTES_COUNTER;
	public COUNTER_DISKElements getCOUNTER_DISKAccess() {
		return eCOUNTER_DISK;
	}
	
	public EnumRule getCOUNTER_DISKRule() {
		return getCOUNTER_DISKAccess().getRule();
	}
	
	//@Override
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//@Override
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//@Override
	//terminal STRING:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | '"'))* '"' |
	//	"'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//@Override
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//@Override
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//@Override
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//@Override
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
