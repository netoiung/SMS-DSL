/**
 * generated by Xtext 2.14.0
 */
package org.unipampa.lesse.canopus.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.unipampa.lesse.canopus.CanopusPackage;
import org.unipampa.lesse.canopus.Hardware;
import org.unipampa.lesse.canopus.SUT;
import org.unipampa.lesse.canopus.SUTType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>SUT</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.unipampa.lesse.canopus.impl.SUTImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.unipampa.lesse.canopus.impl.SUTImpl#getHostname <em>Hostname</em>}</li>
 *   <li>{@link org.unipampa.lesse.canopus.impl.SUTImpl#getIp <em>Ip</em>}</li>
 *   <li>{@link org.unipampa.lesse.canopus.impl.SUTImpl#getHardware <em>Hardware</em>}</li>
 *   <li>{@link org.unipampa.lesse.canopus.impl.SUTImpl#getType <em>Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SUTImpl extends MinimalEObjectImpl.Container implements SUT
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getHostname() <em>Hostname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHostname()
   * @generated
   * @ordered
   */
  protected static final String HOSTNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHostname() <em>Hostname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHostname()
   * @generated
   * @ordered
   */
  protected String hostname = HOSTNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getIp() <em>Ip</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIp()
   * @generated
   * @ordered
   */
  protected static final String IP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIp() <em>Ip</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIp()
   * @generated
   * @ordered
   */
  protected String ip = IP_EDEFAULT;

  /**
   * The default value of the '{@link #getHardware() <em>Hardware</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHardware()
   * @generated
   * @ordered
   */
  protected static final Hardware HARDWARE_EDEFAULT = Hardware.PHYSICA_MACHINE;

  /**
   * The cached value of the '{@link #getHardware() <em>Hardware</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHardware()
   * @generated
   * @ordered
   */
  protected Hardware hardware = HARDWARE_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final SUTType TYPE_EDEFAULT = SUTType.DESKTOPAPP;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected SUTType type = TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SUTImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CanopusPackage.Literals.SUT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CanopusPackage.SUT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHostname()
  {
    return hostname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHostname(String newHostname)
  {
    String oldHostname = hostname;
    hostname = newHostname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CanopusPackage.SUT__HOSTNAME, oldHostname, hostname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIp()
  {
    return ip;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIp(String newIp)
  {
    String oldIp = ip;
    ip = newIp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CanopusPackage.SUT__IP, oldIp, ip));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Hardware getHardware()
  {
    return hardware;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHardware(Hardware newHardware)
  {
    Hardware oldHardware = hardware;
    hardware = newHardware == null ? HARDWARE_EDEFAULT : newHardware;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CanopusPackage.SUT__HARDWARE, oldHardware, hardware));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SUTType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(SUTType newType)
  {
    SUTType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CanopusPackage.SUT__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CanopusPackage.SUT__NAME:
        return getName();
      case CanopusPackage.SUT__HOSTNAME:
        return getHostname();
      case CanopusPackage.SUT__IP:
        return getIp();
      case CanopusPackage.SUT__HARDWARE:
        return getHardware();
      case CanopusPackage.SUT__TYPE:
        return getType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CanopusPackage.SUT__NAME:
        setName((String)newValue);
        return;
      case CanopusPackage.SUT__HOSTNAME:
        setHostname((String)newValue);
        return;
      case CanopusPackage.SUT__IP:
        setIp((String)newValue);
        return;
      case CanopusPackage.SUT__HARDWARE:
        setHardware((Hardware)newValue);
        return;
      case CanopusPackage.SUT__TYPE:
        setType((SUTType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CanopusPackage.SUT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CanopusPackage.SUT__HOSTNAME:
        setHostname(HOSTNAME_EDEFAULT);
        return;
      case CanopusPackage.SUT__IP:
        setIp(IP_EDEFAULT);
        return;
      case CanopusPackage.SUT__HARDWARE:
        setHardware(HARDWARE_EDEFAULT);
        return;
      case CanopusPackage.SUT__TYPE:
        setType(TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CanopusPackage.SUT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CanopusPackage.SUT__HOSTNAME:
        return HOSTNAME_EDEFAULT == null ? hostname != null : !HOSTNAME_EDEFAULT.equals(hostname);
      case CanopusPackage.SUT__IP:
        return IP_EDEFAULT == null ? ip != null : !IP_EDEFAULT.equals(ip);
      case CanopusPackage.SUT__HARDWARE:
        return hardware != HARDWARE_EDEFAULT;
      case CanopusPackage.SUT__TYPE:
        return type != TYPE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", hostname: ");
    result.append(hostname);
    result.append(", ip: ");
    result.append(ip);
    result.append(", hardware: ");
    result.append(hardware);
    result.append(", type: ");
    result.append(type);
    result.append(')');
    return result.toString();
  }

} //SUTImpl
